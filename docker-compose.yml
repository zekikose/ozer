version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: smstk_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: smstk_db
      MYSQL_USER: smstk_user
      MYSQL_PASSWORD: smstk_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - smstk_network

  # Backend API
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: smstk_api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: mysql
      DB_USER: smstk_user
      DB_PASSWORD: smstk_pass
      DB_NAME: smstk_db
      DB_PORT: 3306
      JWT_SECRET: your-super-secure-jwt-secret-key-change-this
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    networks:
      - smstk_network

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: smstk_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - smstk_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: smstk_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-docker.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - api
    networks:
      - smstk_network

volumes:
  mysql_data:

networks:
  smstk_network:
    driver: bridge
